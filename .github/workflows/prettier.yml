name: CI Workflow

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  prettier:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v3

      - name: 🟢 Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 🛠️ Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 📦 Install dependencies
        run: |
          rm -rf node_modules
          npm ci

      - name: 🧼 Run Prettier check
        run: npx prettier --check .

  lint:
    runs-on: ubuntu-latest
    needs: prettier

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v3

      - name: 🟢 Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 🛠️ Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run ESLint
        run: npx eslint . --max-warnings=0

  build:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v3

      - name: 🟢 Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 🛠️ Restore cached dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🚀 Build client
        run: npm run build

  security:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v3

      - name: 🟢 Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 🔒 Run Security Audit
        run: npm audit

  # test:
  #   runs-on: ubuntu-latest
  #   needs: security

  #   steps:
  #     - name: ⬇️ Checkout repository
  #       uses: actions/checkout@v3

  #     - name: 🟢 Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18

  #     - name: 📦 Install dependencies
  #       run: npm ci

  #     - name: 🧪 Run Vitest
  #       run: npx vitest --run --passWithNoTests

  # e2e:
  #   runs-on: ubuntu-latest
  #   needs: test

  #   steps:
  #     - name: ⬇️ Checkout repository
  #       uses: actions/checkout@v3

  #     - name: 🟢 Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18

  #     - name: 📦 Install dependencies
  #       run: npm ci

  #     - name: 🌐 Start the frontend (pointing to live backend)
  #       env:
  #         MODE: production
  #       run: |
  #         npm run dev & npx wait-on http://localhost:5173

  #     - name: 🧪 Run Cypress tests
  #       env:
  #         MODE: production
  #       run: npx cypress run
